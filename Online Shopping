my_order.add_item(milk,11)class Product:
    def __init__(self,name,price,deal_price,rating):
        self.name=name
        self.price=price
        self.deal_price=deal_price
        self.rating=rating
        self.you_save=price-deal_price
        
    def display_product_details(self):
        print("Nmae:{}".format(self.name))
        print("Price:{}".format(self.price))
        print("Deal Price:{}".format(self.deal_price))
        print("Rating:{}".format(self.rating))
        print("You Save:{}".format(self.you_save))
    def get_deal_price(self):
        return self.deal_price
      
class ElecronicItem(Product):
    def __init__(self,name,price,deal_price,rating,warranty_in_months):
        super().__init__(name,price,deal_price,rating)
        self.warranty_in_months=warranty_in_months
    def display_product_details(self):
        super().display_product_details()
        print("Warranty:{}".format(self.warranty_in_months))
class GroceryItem(Product):        
    def __init__(self,name,price,deal_price,rating,expiry_date):
        super().__init__(name,price,deal_price,rating)
        self.expiry_date=expiry_date
    def display_product_details(self):
        super().display_product_details()
        print("Expiry Date:{}".format(self.expiry_date))
class Laptop(ElecronicItem):#multiple inheritance
    def __init__(self,name,price,deal_price,rating,warranty_in_months,ram,storage):
        super().__init__(name,price,deal_price,rating,warranty_in_months)
        self.ram=ram
        self.storage=storage
    def display_product_details(self):
        super().display_product_details()
        print("Ram:{}".format(self.ram))
        print("Storage:{}".format(self.storage))
    

class Order:
    delivery_charges={
        "Normal":0,
        "Prime":100
        }
    def __init__(self,delivery_method,delivery_address):
        self.delivery_method=delivery_method
        self.delivery_address=delivery_address
        self.items_in_cart=[]
    def add_item(self,product,quantity):
        item=(product,quantity)
        self.items_in_cart.append(item)
    def display_product_details(self):
        print("Delivery Method:{}".format(self.delivery_method))
        print("Delivery Address:{}".format(self.delivery_address))
        print("Products")
        print("-----------------------")
        for product,quantity in self.items_in_cart:
            product.display_product_details()
            print("Quantity:{}".format(quantity))
            print("")
        Total_bill=self.get_total_bill() #get_total_billanedi instance method kanuka self.ani access cheyyali   
        print("------------------------")
        print("Total_bill:{}".format(Total_bill))
        
    def get_total_bill(self):
        total_bill=0
        for product,quantity in self.items_in_cart:
            total_bill=total_bill+product.get_deal_price()*quantity
        order_delivery_charges=Order.delivery_charges[self.delivery_method]#class atribute ni Order. ani delivery_chargesanedi dict kanuka methon ni manam instancelo eam iste aaa method tisukuntadi
        total_bill=total_bill+order_delivery_charges
        return total_bill    
    @classmethod#delivery_charges anedi class atributekanuka class methodani access cheyyali
    def update_delivery_chrges(cls,delivery_method,charges):
        cls.delivery_charges[delivery_method]=charges
tv=ElecronicItem("TV",30000,25000,4.1,18)
milk=GroceryItem("milk",40,25,4.4,"Jan 2023")
Laptop=Laptop("Laptop",60000,55000,4.9,12,"4 GB","128 GB")
my_order=Order("Normal","Hyderabad")
my_order.add_item(tv,1)
my_order.add_item(milk,11)
my_order.add_item(Laptop,1)
my_order.display_product_details()
#my_order.update_delivery_chrges("Normal",50)
#my_order.display_product_details()

            
    
    
        
